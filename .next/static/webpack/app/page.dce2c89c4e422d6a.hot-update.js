"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./utils/api.js":
/*!**********************!*\
  !*** ./utils/api.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDefinition\": function() { return /* binding */ getDefinition; },\n/* harmony export */   \"getGrammarExplanation\": function() { return /* binding */ getGrammarExplanation; },\n/* harmony export */   \"parseText\": function() { return /* binding */ parseText; },\n/* harmony export */   \"translateText\": function() { return /* binding */ translateText; }\n/* harmony export */ });\nconst translateText = async (text)=>{\n    try {\n        const response = await fetch(\"http://localhost:5328/api/translate\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                text\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Translation failed\");\n        }\n        const data = await response.json();\n        return data.translation;\n    } catch (error) {\n        console.error(\"Translation error:\", error);\n        throw error;\n    }\n};\nconst getGrammarExplanation = async (text)=>{\n    try {\n        const response = await fetch(\"http://localhost:5328/api/grammarExplanation\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                text\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Grammar explanation failed\");\n        }\n        const data = await response.json();\n        return data.explanation;\n    } catch (error) {\n        console.error(\"Grammar error:\", error);\n        throw error;\n    }\n};\nconst parseText = async (text)=>{\n    try {\n        const response = await fetch(\"http://localhost:5328/api/parseText\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                text: text\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error\", error);\n        alert(\"An error occurred while analyzing the text. Please try again.\");\n    }\n};\nconst getDefinition = async (text)=>{\n    try {\n        const response = await fetch(\"http://localhost:5328/api/jisho\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                text: text\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error\", error);\n        alert(\"An error occurred while analyzing the text. Please try again.\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vdXRpbHMvYXBpLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxNQUFNQSxnQkFBZ0IsT0FBT0MsT0FBUztJQUN6QyxJQUFJO1FBQ0EsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLHVDQUF1QztZQUNoRUMsUUFBUTtZQUNSQyxTQUFTO2dCQUNMLGdCQUFnQjtZQUNwQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQUVQO1lBQUs7UUFDaEM7UUFFQSxJQUFJLENBQUNDLFNBQVNPLEVBQUUsRUFBRTtZQUNkLE1BQU0sSUFBSUMsTUFBTSxzQkFBc0I7UUFDMUMsQ0FBQztRQUVELE1BQU1DLE9BQU8sTUFBTVQsU0FBU1UsSUFBSTtRQUVoQyxPQUFPRCxLQUFLRSxXQUFXO0lBQzNCLEVBQUUsT0FBT0MsT0FBTztRQUNaQyxRQUFRRCxLQUFLLENBQUMsc0JBQXNCQTtRQUNwQyxNQUFNQSxNQUFNO0lBQ2hCO0FBQ0osRUFBRTtBQUVLLE1BQU1FLHdCQUF3QixPQUFPZixPQUFTO0lBQ2pELElBQUk7UUFDQSxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sZ0RBQWdEO1lBQ3pFQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsZ0JBQWdCO1lBQ3BCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFBRVA7WUFBSztRQUNoQztRQUVBLElBQUksQ0FBQ0MsU0FBU08sRUFBRSxFQUFFO1lBQ2QsTUFBTSxJQUFJQyxNQUFNLDhCQUE4QjtRQUNsRCxDQUFDO1FBRUQsTUFBTUMsT0FBTyxNQUFNVCxTQUFTVSxJQUFJO1FBRWhDLE9BQU9ELEtBQUtNLFdBQVc7SUFDM0IsRUFBRSxPQUFPSCxPQUFPO1FBQ1pDLFFBQVFELEtBQUssQ0FBQyxrQkFBa0JBO1FBQ2hDLE1BQU1BLE1BQU07SUFDaEI7QUFDSixFQUFFO0FBRUssTUFBTUksWUFBWSxPQUFPakIsT0FBUztJQUNyQyxJQUFJO1FBQ0EsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLHVDQUF1QztZQUNoRUMsUUFBUTtZQUNSQyxTQUFTO2dCQUNMLGdCQUFnQjtZQUNwQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQUVQLE1BQU1BO1lBQUs7UUFDdEM7UUFFQSxJQUFJLENBQUNDLFNBQVNPLEVBQUUsRUFBRTtZQUNkLE1BQU0sSUFBSUMsTUFBTSx1QkFBdUMsT0FBaEJSLFNBQVNpQixNQUFNLEdBQUk7UUFDOUQsQ0FBQztRQUVELE1BQU1SLE9BQU8sTUFBTVQsU0FBU1UsSUFBSTtRQUNoQyxPQUFPRDtJQUNYLEVBQ0EsT0FBTUcsT0FBTTtRQUNSQyxRQUFRRCxLQUFLLENBQUMsU0FBVUE7UUFDeEJNLE1BQU07SUFDVjtBQUNKLEVBQUM7QUFHTSxNQUFNQyxnQkFBZ0IsT0FBT3BCLE9BQVE7SUFDeEMsSUFBSTtRQUNBLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxtQ0FBbUM7WUFDNURDLFFBQVE7WUFDUkMsU0FBUztnQkFDTCxnQkFBZ0I7WUFDcEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUFFUCxNQUFNQTtZQUFLO1FBQ3RDO1FBRUEsSUFBSSxDQUFDQyxTQUFTTyxFQUFFLEVBQUU7WUFDZCxNQUFNLElBQUlDLE1BQU0sdUJBQXVDLE9BQWhCUixTQUFTaUIsTUFBTSxHQUFJO1FBQzlELENBQUM7UUFFRCxNQUFNUixPQUFPLE1BQU1ULFNBQVNVLElBQUk7UUFDaEMsT0FBT0Q7SUFDWCxFQUNBLE9BQU1HLE9BQU07UUFDUkMsUUFBUUQsS0FBSyxDQUFDLFNBQVVBO1FBQ3hCTSxNQUFNO0lBQ1Y7QUFDSixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL2FwaS5qcz9jMTEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB0cmFuc2xhdGVUZXh0ID0gYXN5bmMgKHRleHQpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjUzMjgvYXBpL3RyYW5zbGF0ZScsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0ZXh0IH0pLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zbGF0aW9uIGZhaWxlZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICByZXR1cm4gZGF0YS50cmFuc2xhdGlvbjtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdUcmFuc2xhdGlvbiBlcnJvcjonLCBlcnJvcik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRHcmFtbWFyRXhwbGFuYXRpb24gPSBhc3luYyAodGV4dCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6NTMyOC9hcGkvZ3JhbW1hckV4cGxhbmF0aW9uJywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHRleHQgfSksXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignR3JhbW1hciBleHBsYW5hdGlvbiBmYWlsZWQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgICAgcmV0dXJuIGRhdGEuZXhwbGFuYXRpb247XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignR3JhbW1hciBlcnJvcjonLCBlcnJvcik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBwYXJzZVRleHQgPSBhc3luYyAodGV4dCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6NTMyOC9hcGkvcGFyc2VUZXh0Jywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHRleHQ6IHRleHQgfSksXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGNhdGNoKGVycm9yKXtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3InICwgZXJyb3IpO1xuICAgICAgICBhbGVydCgnQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgYW5hbHl6aW5nIHRoZSB0ZXh0LiBQbGVhc2UgdHJ5IGFnYWluLicpO1xuICAgIH1cbn1cblxuXG5leHBvcnQgY29uc3QgZ2V0RGVmaW5pdGlvbiA9IGFzeW5jICh0ZXh0KSA9PntcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjUzMjgvYXBpL2ppc2hvJywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHRleHQ6IHRleHQgfSksXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGNhdGNoKGVycm9yKXtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3InICwgZXJyb3IpO1xuICAgICAgICBhbGVydCgnQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgYW5hbHl6aW5nIHRoZSB0ZXh0LiBQbGVhc2UgdHJ5IGFnYWluLicpO1xuICAgIH1cbn1cblxuXG5cbiJdLCJuYW1lcyI6WyJ0cmFuc2xhdGVUZXh0IiwidGV4dCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJ0cmFuc2xhdGlvbiIsImVycm9yIiwiY29uc29sZSIsImdldEdyYW1tYXJFeHBsYW5hdGlvbiIsImV4cGxhbmF0aW9uIiwicGFyc2VUZXh0Iiwic3RhdHVzIiwiYWxlcnQiLCJnZXREZWZpbml0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./utils/api.js\n"));

/***/ })

});